name: 🚀 Deployment Testing

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  # ==========================================
  # 🚀 Pre-deployment Tests
  # ==========================================
  pre-deployment-tests:
    name: 🚀 Pre-deployment Validation
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: 📥 Install Dependencies
        run: |
          npm ci
          cd python_backend && pip install -r requirements.txt

      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps chromium

      - name: 🏗️ Production Build
        run: |
          npm run build
          npm run build-storybook

      - name: 🧪 Critical Path Tests
        run: |
          # Run only critical tests for deployment
          npm run test:unit -- --testPathPattern="critical|integration"
          
      - name: 🚀 Full Service Integration Test
        run: |
          # Start all services
          cd python_backend && uvicorn main:app --host 0.0.0.0 --port 8000 &
          npm start &
          sleep 20
          
          # Run critical E2E tests
          npx playwright test --project=chromium tests/e2e/ui-functionality.spec.ts
          
          # Run integration tests
          python test-integration-flow.py
          python test_basic_flows.py

      - name: 🔍 Security Scan
        run: |
          npm audit --audit-level=high
          
      - name: 📊 Performance Baseline
        run: |
          node test-performance.cjs > performance-baseline.txt
          
      - name: 📤 Upload Deployment Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-test-results
          path: |
            performance-baseline.txt
            test-reports/
            
  # ==========================================
  # 🐳 Container Tests
  # ==========================================
  container-tests:
    name: 🐳 Container Deployment Tests
    runs-on: ubuntu-latest
    needs: pre-deployment-tests
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Build Production Container
        run: |
          if [ -f "Dockerfile" ]; then
            docker build -t debug-player:${{ github.sha }} .
          else
            echo "No Dockerfile found, skipping container tests"
            exit 0
          fi

      - name: 🧪 Container Integration Test
        run: |
          if [ -f "Dockerfile" ]; then
            # Start container
            docker run -d --name test-container -p 5000:5000 debug-player:${{ github.sha }}
            sleep 15
            
            # Test container health
            curl -f http://localhost:5000/api/health
            
            # Run basic API tests
            curl -f http://localhost:5000/api/sessions
            
            # Cleanup
            docker stop test-container
            docker rm test-container
          fi

  # ==========================================
  # 📊 Deployment Summary
  # ==========================================
  deployment-summary:
    name: 📊 Deployment Test Summary
    runs-on: ubuntu-latest
    needs: [pre-deployment-tests, container-tests]
    if: always()
    steps:
      - name: 📊 Generate Deployment Summary
        run: |
          echo "## 🚀 Deployment Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Category | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Pre-deployment Tests | ${{ needs.pre-deployment-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Container Tests | ${{ needs.container-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment || 'staging' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY

      - name: ✅ Deployment Ready
        if: needs.pre-deployment-tests.result == 'success' && needs.container-tests.result == 'success'
        run: |
          echo "🎉 All deployment tests passed! Ready for deployment."
          
      - name: ❌ Deployment Blocked
        if: needs.pre-deployment-tests.result != 'success' || needs.container-tests.result != 'success'
        run: |
          echo "❌ Deployment tests failed! Deployment should be blocked."
          exit 1