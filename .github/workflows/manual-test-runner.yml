name: 🔧 Manual Test Runner

on:
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Select test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - unit
        - e2e
        - integration
        - performance
        - python
        - security
        - custom
      custom_command:
        description: 'Custom test command (if test_suite = custom)'
        required: false
        type: string
      browser:
        description: 'Browser for E2E tests'
        required: false
        default: 'chromium'
        type: choice
        options:
        - chromium
        - firefox
        - webkit
        - all
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  manual-test-execution:
    name: 🔧 Manual Test Execution
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: 📥 Install Dependencies
        run: |
          npm ci
          cd python_backend && pip install -r requirements.txt

      - name: 🎭 Install Playwright (if needed)
        if: contains(github.event.inputs.test_suite, 'e2e') || github.event.inputs.test_suite == 'all'
        run: npx playwright install --with-deps

      - name: 🏗️ Build Application
        run: npm run build

      - name: 🚀 Start Services (if needed)
        if: >
          github.event.inputs.test_suite == 'all' ||
          github.event.inputs.test_suite == 'e2e' ||
          github.event.inputs.test_suite == 'integration' ||
          github.event.inputs.test_suite == 'performance'
        run: |
          cd python_backend && uvicorn main:app --host 0.0.0.0 --port 8000 &
          npm start &
          sleep 15

      - name: 🧪 Execute Unit Tests
        if: github.event.inputs.test_suite == 'unit' || github.event.inputs.test_suite == 'all'
        run: |
          echo "🧪 Running Unit Tests..."
          npm run test:unit
          npm run test:coverage

      - name: 🎭 Execute E2E Tests
        if: github.event.inputs.test_suite == 'e2e' || github.event.inputs.test_suite == 'all'
        run: |
          echo "🎭 Running E2E Tests..."
          if [ "${{ github.event.inputs.browser }}" = "all" ]; then
            npx playwright test
          else
            npx playwright test --project=${{ github.event.inputs.browser }}
          fi

      - name: 🔗 Execute Integration Tests
        if: github.event.inputs.test_suite == 'integration' || github.event.inputs.test_suite == 'all'
        run: |
          echo "🔗 Running Integration Tests..."
          node test-frontend-integration.cjs
          python test-integration-flow.py
          python test_basic_flows.py

      - name: ⚡ Execute Performance Tests
        if: github.event.inputs.test_suite == 'performance' || github.event.inputs.test_suite == 'all'
        run: |
          echo "⚡ Running Performance Tests..."
          node test-performance.cjs

      - name: 🐍 Execute Python Tests
        if: github.event.inputs.test_suite == 'python' || github.event.inputs.test_suite == 'all'
        run: |
          echo "🐍 Running Python Tests..."
          cd python_backend && python test_backend.py

      - name: 🔐 Execute Security Tests
        if: github.event.inputs.test_suite == 'security' || github.event.inputs.test_suite == 'all'
        run: |
          echo "🔐 Running Security Tests..."
          npm audit --audit-level=moderate

      - name: 🔧 Execute Custom Command
        if: github.event.inputs.test_suite == 'custom'
        run: |
          echo "🔧 Running Custom Command: ${{ github.event.inputs.custom_command }}"
          ${{ github.event.inputs.custom_command }}

      - name: 🔍 Run Comprehensive Test Suite
        if: github.event.inputs.test_suite == 'all'
        run: |
          echo "🔍 Running Comprehensive Test Suite..."
          ./run-all-tests-comprehensive.sh

      - name: 🐛 Debug Information
        if: github.event.inputs.debug_mode == 'true'
        run: |
          echo "🐛 Debug Information:"
          echo "Node Version: $(node --version)"
          echo "Python Version: $(python --version)"
          echo "NPM Version: $(npm --version)"
          echo "Available Services:"
          curl -f http://localhost:5000/api/health || echo "Express server not running"
          curl -f http://localhost:8000/health || echo "Python backend not running"
          echo "Environment Variables:"
          env | grep -E "(NODE_|NPM_|PYTHON_)" || true

      - name: 📤 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: manual-test-results-${{ github.event.inputs.test_suite }}
          path: |
            test-reports/
            playwright-report/
            test-results/
            coverage/

      - name: 📊 Test Summary
        if: always()
        run: |
          echo "## 🔧 Manual Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Suite:** ${{ github.event.inputs.test_suite }}" >> $GITHUB_STEP_SUMMARY
          echo "**Browser:** ${{ github.event.inputs.browser }}" >> $GITHUB_STEP_SUMMARY
          echo "**Debug Mode:** ${{ github.event.inputs.debug_mode }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event.inputs.test_suite }}" = "custom" ]; then
            echo "**Custom Command:** ${{ github.event.inputs.custom_command }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY